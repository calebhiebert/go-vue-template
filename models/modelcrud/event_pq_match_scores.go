// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterEventPQMatchScores(rg *gin.RouterGroup) {
	rg.GET("/eventPQMatchScores/:id", gcc.GetEventPQMatchScoreByID)
	rg.GET("/eventPQMatchScores", gcc.GetEventPQMatchScores)
	rg.PUT("/eventPQMatchScores/:id", gcc.UpdateEventPQMatchScoreByID)
	rg.POST("/eventPQMatchScores", gcc.CreateEventPQMatchScore)
	rg.DELETE("/eventPQMatchScores/:id", gcc.DeleteEventPQMatchScoreByID)
	rg.DELETE("/eventPQMatchScores", gcc.BulkDeleteEventPQMatchScoresByIDs)
}

var EventPQMatchScoresAdmin = api.AdminModel{
	Name:          "EventPQMatchScores",
	NameSingular:  "EventPQMatchScore",
	CanSoftDelete: false,
	URLName:       "eventPQMatchScores",
	DataName:      "event_pq_match_scores",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "event_id",
			Name:     "EventID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "events",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "profile_question_id",
			Name:     "ProfileQuestionID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "profile_questions",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "rating_avg",
			Name:     "RatingAvg",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "int",
		},
		&api.AdminModelField{
			ID:       "num_avg",
			Name:     "NumAvg",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "float",
		},
	},
}

type EventPQMatchScoresModelConfigType struct {
	EventID api.AdminModelFieldConfig

	ProfileQuestionID api.AdminModelFieldConfig

	RatingAvg api.AdminModelFieldConfig

	NumAvg api.AdminModelFieldConfig
}

var EventPQMatchScoresModelConfig = EventPQMatchScoresModelConfigType{

	EventID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ProfileQuestionID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	RatingAvg: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	NumAvg: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c EventPQMatchScoresModelConfigType) Apply() {

	EventPQMatchScoresAdmin.Fields[0].Config = c.EventID

	EventPQMatchScoresAdmin.Fields[1].Config = c.ProfileQuestionID

	EventPQMatchScoresAdmin.Fields[2].Config = c.RatingAvg

	EventPQMatchScoresAdmin.Fields[3].Config = c.NumAvg

}
