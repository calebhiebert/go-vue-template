// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"net/http"

	"github.com/calebhiebert/go-vue-template/api"
	"github.com/calebhiebert/go-vue-template/models"
	"github.com/gin-gonic/gin"
	"github.com/gofrs/uuid"
	"github.com/volatiletech/null/v8"
	"github.com/volatiletech/sqlboiler/v4/boil"
)

type GenerateInviteStringID func(*CreateInviteRequest) string

var GenerateInviteID GenerateInviteStringID

type APICreateInviteRequest struct {
	EventID *string `boil:"event_id" json:"event_id,omitempty" toml:"event_id" yaml:"event_id,omitempty"`

	GroupID *string `boil:"group_id" json:"group_id,omitempty" toml:"group_id" yaml:"group_id,omitempty"`

	SuggestedName *string `boil:"suggested_name" json:"suggested_name,omitempty" toml:"suggested_name" yaml:"suggested_name,omitempty"`

	Phone *string `boil:"phone" json:"phone,omitempty" toml:"phone" yaml:"phone,omitempty"`

	Email *string `boil:"email" json:"email,omitempty" toml:"email" yaml:"email,omitempty"`
}

type CreateInviteRequest struct {
	ID            *string      `boil:"id" json:"id,omitempty" toml:"id" yaml:"id,omitempty"`
	EventID       *null.String `boil:"event_id" json:"event_id,omitempty" toml:"event_id"  yaml:"event_id,omitempty"`
	GroupID       *null.String `boil:"group_id" json:"group_id,omitempty" toml:"group_id"  yaml:"group_id,omitempty"`
	SuggestedName *null.String `boil:"suggested_name" json:"suggested_name,omitempty" toml:"suggested_name"  yaml:"suggested_name,omitempty"`
	Phone         *null.String `boil:"phone" json:"phone,omitempty" toml:"phone"  yaml:"phone,omitempty"`
	Email         *null.String `boil:"email" json:"email,omitempty" toml:"email"  yaml:"email,omitempty"`
}

// CreateInvite godoc
// @Summary Creates a new Invite
// @Produce json
// @Accept json
// @Param req body APICreateInviteRequest true "Creation parameters"
// @Success 200 {object} APIInvite
// @Router /crud/invites  [post]
func (*GeneratedCrudController) CreateInvite(c *gin.Context) {
	var createReq CreateInviteRequest

	err := c.BindJSON(&createReq)
	if err != nil {
		api.APIErrorFromErr(err).Respond(c)
		return
	}

	newInvite := models.Invite{}

	newInvite.ID = uuid.Must(uuid.NewV4()).String()

	if createReq.EventID != nil {
		newInvite.EventID = *createReq.EventID
	}

	if createReq.GroupID != nil {
		newInvite.GroupID = *createReq.GroupID
	}

	if createReq.SuggestedName != nil {
		newInvite.SuggestedName = *createReq.SuggestedName
	}

	if createReq.Phone != nil {
		newInvite.Phone = *createReq.Phone
	}

	if createReq.Email != nil {
		newInvite.Email = *createReq.Email
	}

	err = newInvite.InsertG(c.Request.Context(), boil.Infer())
	if err != nil {
		api.APIErrorFromErr(err).Respond(c)
		return
	}

	c.JSON(http.StatusOK, newInvite)
}
