// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterTokenIssuances(rg *gin.RouterGroup) {
	rg.GET("/tokenIssuances/:id", gcc.GetTokenIssuanceByID)
	rg.GET("/tokenIssuances", gcc.GetTokenIssuances)
	rg.PUT("/tokenIssuances/:id", gcc.UpdateTokenIssuanceByID)
	rg.POST("/tokenIssuances", gcc.CreateTokenIssuance)
	rg.DELETE("/tokenIssuances/:id", gcc.DeleteTokenIssuanceByID)
	rg.DELETE("/tokenIssuances", gcc.BulkDeleteTokenIssuancesByIDs)
}

var TokenIssuancesAdmin = api.AdminModel{
	Name:          "TokenIssuances",
	NameSingular:  "TokenIssuance",
	CanSoftDelete: false,
	URLName:       "tokenIssuances",
	DataName:      "token_issuances",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "id",
			Name:     "ID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "user_id",
			Name:     "UserID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "users",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "ip_address",
			Name:     "IPAddress",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "created_at",
			Name:     "CreatedAt",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
	},
}

type TokenIssuancesModelConfigType struct {
	ID api.AdminModelFieldConfig

	UserID api.AdminModelFieldConfig

	IPAddress api.AdminModelFieldConfig

	CreatedAt api.AdminModelFieldConfig
}

var TokenIssuancesModelConfig = TokenIssuancesModelConfigType{

	ID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	UserID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	IPAddress: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c TokenIssuancesModelConfigType) Apply() {

	TokenIssuancesAdmin.Fields[0].Config = c.ID

	TokenIssuancesAdmin.Fields[1].Config = c.UserID

	TokenIssuancesAdmin.Fields[2].Config = c.IPAddress

	TokenIssuancesAdmin.Fields[3].Config = c.CreatedAt

}
