// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterProfileQuestions(rg *gin.RouterGroup) {
	rg.GET("/profileQuestions/:id", gcc.GetProfileQuestionByID)
	rg.GET("/profileQuestions", gcc.GetProfileQuestions)
	rg.PUT("/profileQuestions/:id", gcc.UpdateProfileQuestionByID)
	rg.POST("/profileQuestions", gcc.CreateProfileQuestion)
	rg.DELETE("/profileQuestions/:id", gcc.DeleteProfileQuestionByID)
	rg.DELETE("/profileQuestions", gcc.BulkDeleteProfileQuestionsByIDs)
}

var ProfileQuestionsAdmin = api.AdminModel{
	Name:          "ProfileQuestions",
	NameSingular:  "ProfileQuestion",
	CanSoftDelete: false,
	URLName:       "profileQuestions",
	DataName:      "profile_questions",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "id",
			Name:     "ID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "question",
			Name:     "Question",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "answer_type",
			Name:     "AnswerType",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "int",
		},
		&api.AdminModelField{
			ID:       "options",
			Name:     "Options",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: false,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "json",
		},
		&api.AdminModelField{
			ID:       "weight",
			Name:     "Weight",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "float64",
		},
		&api.AdminModelField{
			ID:       "created_at",
			Name:     "CreatedAt",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
	},
}

type ProfileQuestionsModelConfigType struct {
	ID api.AdminModelFieldConfig

	Question api.AdminModelFieldConfig

	AnswerType api.AdminModelFieldConfig

	Options api.AdminModelFieldConfig

	Weight api.AdminModelFieldConfig

	CreatedAt api.AdminModelFieldConfig
}

var ProfileQuestionsModelConfig = ProfileQuestionsModelConfigType{

	ID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	Question: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	AnswerType: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	Options: api.AdminModelFieldConfig{
		ShowOnGraph: false,
		Editable:    true,
		IsEmail:     false,
	},
	Weight: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c ProfileQuestionsModelConfigType) Apply() {

	ProfileQuestionsAdmin.Fields[0].Config = c.ID

	ProfileQuestionsAdmin.Fields[1].Config = c.Question

	ProfileQuestionsAdmin.Fields[2].Config = c.AnswerType

	ProfileQuestionsAdmin.Fields[3].Config = c.Options

	ProfileQuestionsAdmin.Fields[4].Config = c.Weight

	ProfileQuestionsAdmin.Fields[5].Config = c.CreatedAt

}
