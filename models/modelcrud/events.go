// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterEvents(rg *gin.RouterGroup) {
	rg.GET("/events/:id", gcc.GetEventByID)
	rg.GET("/events", gcc.GetEvents)
	rg.PUT("/events/:id", gcc.UpdateEventByID)
	rg.POST("/events", gcc.CreateEvent)
	rg.DELETE("/events/:id", gcc.DeleteEventByID)
	rg.DELETE("/events", gcc.BulkDeleteEventsByIDs)
	rg.POST("/events/:id/unDelete", gcc.UnDeleteEventByID)
}

var EventsAdmin = api.AdminModel{
	Name:          "Events",
	NameSingular:  "Event",
	CanSoftDelete: true,
	URLName:       "events",
	DataName:      "events",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "id",
			Name:     "ID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "game_type_id",
			Name:     "GameTypeID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "game_types",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "event_date",
			Name:     "EventDate",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "player_count",
			Name:     "PlayerCount",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "int",
		},
		&api.AdminModelField{
			ID:       "name",
			Name:     "Name",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "created_by_id",
			Name:     "CreatedByID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "users",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "course_id",
			Name:     "CourseID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "courses",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "parent_id",
			Name:     "ParentID",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "events",
					Field:    "id",
					Nullable: true,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "public",
			Name:     "Public",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "bool",
		},
		&api.AdminModelField{
			ID:       "created_at",
			Name:     "CreatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "updated_at",
			Name:     "UpdatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "deleted_at",
			Name:     "DeletedAt",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: false,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
	},
}

type EventsModelConfigType struct {
	ID api.AdminModelFieldConfig

	GameTypeID api.AdminModelFieldConfig

	EventDate api.AdminModelFieldConfig

	PlayerCount api.AdminModelFieldConfig

	Name api.AdminModelFieldConfig

	CreatedByID api.AdminModelFieldConfig

	CourseID api.AdminModelFieldConfig

	ParentID api.AdminModelFieldConfig

	Public api.AdminModelFieldConfig

	CreatedAt api.AdminModelFieldConfig

	UpdatedAt api.AdminModelFieldConfig

	DeletedAt api.AdminModelFieldConfig
}

var EventsModelConfig = EventsModelConfigType{

	ID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	GameTypeID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	EventDate: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	PlayerCount: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	Name: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedByID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CourseID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ParentID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	Public: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	UpdatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	DeletedAt: api.AdminModelFieldConfig{
		ShowOnGraph: false,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c EventsModelConfigType) Apply() {

	EventsAdmin.Fields[0].Config = c.ID

	EventsAdmin.Fields[1].Config = c.GameTypeID

	EventsAdmin.Fields[2].Config = c.EventDate

	EventsAdmin.Fields[3].Config = c.PlayerCount

	EventsAdmin.Fields[4].Config = c.Name

	EventsAdmin.Fields[5].Config = c.CreatedByID

	EventsAdmin.Fields[6].Config = c.CourseID

	EventsAdmin.Fields[7].Config = c.ParentID

	EventsAdmin.Fields[8].Config = c.Public

	EventsAdmin.Fields[9].Config = c.CreatedAt

	EventsAdmin.Fields[10].Config = c.UpdatedAt

	EventsAdmin.Fields[11].Config = c.DeletedAt

}
