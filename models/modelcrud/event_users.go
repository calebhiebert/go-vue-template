// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterEventUsers(rg *gin.RouterGroup) {
	rg.GET("/eventUsers/:id", gcc.GetEventUserByID)
	rg.GET("/eventUsers", gcc.GetEventUsers)
	rg.PUT("/eventUsers/:id", gcc.UpdateEventUserByID)
	rg.POST("/eventUsers", gcc.CreateEventUser)
	rg.DELETE("/eventUsers/:id", gcc.DeleteEventUserByID)
	rg.DELETE("/eventUsers", gcc.BulkDeleteEventUsersByIDs)
	rg.POST("/eventUsers/:id/unDelete", gcc.UnDeleteEventUserByID)
}

var EventUsersAdmin = api.AdminModel{
	Name:          "EventUsers",
	NameSingular:  "EventUser",
	CanSoftDelete: true,
	URLName:       "eventUsers",
	DataName:      "event_users",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "user_id",
			Name:     "UserID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "users",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "event_id",
			Name:     "EventID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "events",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "is_owner",
			Name:     "IsOwner",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "bool",
		},
		&api.AdminModelField{
			ID:       "accepted",
			Name:     "Accepted",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "bool",
		},
		&api.AdminModelField{
			ID:       "created_at",
			Name:     "CreatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "updated_at",
			Name:     "UpdatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "deleted_at",
			Name:     "DeletedAt",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: false,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
	},
}

type EventUsersModelConfigType struct {
	UserID api.AdminModelFieldConfig

	EventID api.AdminModelFieldConfig

	IsOwner api.AdminModelFieldConfig

	Accepted api.AdminModelFieldConfig

	CreatedAt api.AdminModelFieldConfig

	UpdatedAt api.AdminModelFieldConfig

	DeletedAt api.AdminModelFieldConfig
}

var EventUsersModelConfig = EventUsersModelConfigType{

	UserID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	EventID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	IsOwner: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	Accepted: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	UpdatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	DeletedAt: api.AdminModelFieldConfig{
		ShowOnGraph: false,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c EventUsersModelConfigType) Apply() {

	EventUsersAdmin.Fields[0].Config = c.UserID

	EventUsersAdmin.Fields[1].Config = c.EventID

	EventUsersAdmin.Fields[2].Config = c.IsOwner

	EventUsersAdmin.Fields[3].Config = c.Accepted

	EventUsersAdmin.Fields[4].Config = c.CreatedAt

	EventUsersAdmin.Fields[5].Config = c.UpdatedAt

	EventUsersAdmin.Fields[6].Config = c.DeletedAt

}
