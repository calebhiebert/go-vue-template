// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterUserProfileQuestions(rg *gin.RouterGroup) {
	rg.GET("/userProfileQuestions/:id", gcc.GetUserProfileQuestionByID)
	rg.GET("/userProfileQuestions", gcc.GetUserProfileQuestions)
	rg.PUT("/userProfileQuestions/:id", gcc.UpdateUserProfileQuestionByID)
	rg.POST("/userProfileQuestions", gcc.CreateUserProfileQuestion)
	rg.DELETE("/userProfileQuestions/:id", gcc.DeleteUserProfileQuestionByID)
	rg.DELETE("/userProfileQuestions", gcc.BulkDeleteUserProfileQuestionsByIDs)
}

var UserProfileQuestionsAdmin = api.AdminModel{
	Name:          "UserProfileQuestions",
	NameSingular:  "UserProfileQuestion",
	CanSoftDelete: false,
	URLName:       "userProfileQuestions",
	DataName:      "user_profile_questions",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "user_id",
			Name:     "UserID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "users",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "profile_question_id",
			Name:     "ProfileQuestionID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "profile_questions",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "a_number",
			Name:     "ANumber",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "int",
		},
		&api.AdminModelField{
			ID:       "a_rating",
			Name:     "ARating",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "int",
		},
		&api.AdminModelField{
			ID:       "a_days",
			Name:     "ADays",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
		&api.AdminModelField{
			ID:       "a_text",
			Name:     "AText",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "cont"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "string",
		},
	},
}

type UserProfileQuestionsModelConfigType struct {
	UserID api.AdminModelFieldConfig

	ProfileQuestionID api.AdminModelFieldConfig

	ANumber api.AdminModelFieldConfig

	ARating api.AdminModelFieldConfig

	ADays api.AdminModelFieldConfig

	AText api.AdminModelFieldConfig
}

var UserProfileQuestionsModelConfig = UserProfileQuestionsModelConfigType{

	UserID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ProfileQuestionID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ANumber: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ARating: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	ADays: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	AText: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c UserProfileQuestionsModelConfigType) Apply() {

	UserProfileQuestionsAdmin.Fields[0].Config = c.UserID

	UserProfileQuestionsAdmin.Fields[1].Config = c.ProfileQuestionID

	UserProfileQuestionsAdmin.Fields[2].Config = c.ANumber

	UserProfileQuestionsAdmin.Fields[3].Config = c.ARating

	UserProfileQuestionsAdmin.Fields[4].Config = c.ADays

	UserProfileQuestionsAdmin.Fields[5].Config = c.AText

}
