// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package modelcrud

import (
	"github.com/calebhiebert/go-vue-template/api"
	"github.com/gin-gonic/gin"
)

func (gcc *GeneratedCrudController) RegisterGroupUsers(rg *gin.RouterGroup) {
	rg.GET("/groupUsers/:id", gcc.GetGroupUserByID)
	rg.GET("/groupUsers", gcc.GetGroupUsers)
	rg.PUT("/groupUsers/:id", gcc.UpdateGroupUserByID)
	rg.POST("/groupUsers", gcc.CreateGroupUser)
	rg.DELETE("/groupUsers/:id", gcc.DeleteGroupUserByID)
	rg.DELETE("/groupUsers", gcc.BulkDeleteGroupUsersByIDs)
	rg.POST("/groupUsers/:id/unDelete", gcc.UnDeleteGroupUserByID)
}

var GroupUsersAdmin = api.AdminModel{
	Name:          "GroupUsers",
	NameSingular:  "GroupUser",
	CanSoftDelete: true,
	URLName:       "groupUsers",
	DataName:      "group_users",
	Fields: []*api.AdminModelField{
		&api.AdminModelField{
			ID:       "group_id",
			Name:     "GroupID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "groups",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "user_id",
			Name:     "UserID",
			Nullable: false,
			Required: true,
			FilterOperations: []string{
				"eq", "null"},
			ForeignFields: []api.AdminModelForeignField{
				{
					Model:    "users",
					Field:    "id",
					Nullable: false,
					Unique:   false,
				},
			},
			Editable: true,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "uuid",
		},
		&api.AdminModelField{
			ID:       "created_at",
			Name:     "CreatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "updated_at",
			Name:     "UpdatedAt",
			Nullable: false,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: true,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
		&api.AdminModelField{
			ID:       "deleted_at",
			Name:     "DeletedAt",
			Nullable: true,
			Required: false,
			FilterOperations: []string{
				"eq", "null", "gt", "lt", "gte", "lte"},
			ForeignFields: []api.AdminModelForeignField{},
			Editable:      false,
			Config: api.AdminModelFieldConfig{
				ShowOnGraph: false,
				Editable:    true,
				IsEmail:     false,
			},
			Type: "time",
		},
	},
}

type GroupUsersModelConfigType struct {
	GroupID api.AdminModelFieldConfig

	UserID api.AdminModelFieldConfig

	CreatedAt api.AdminModelFieldConfig

	UpdatedAt api.AdminModelFieldConfig

	DeletedAt api.AdminModelFieldConfig
}

var GroupUsersModelConfig = GroupUsersModelConfigType{

	GroupID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	UserID: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	CreatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	UpdatedAt: api.AdminModelFieldConfig{
		ShowOnGraph: true,
		Editable:    true,
		IsEmail:     false,
	},
	DeletedAt: api.AdminModelFieldConfig{
		ShowOnGraph: false,
		Editable:    true,
		IsEmail:     false,
	},
}

func (c GroupUsersModelConfigType) Apply() {

	GroupUsersAdmin.Fields[0].Config = c.GroupID

	GroupUsersAdmin.Fields[1].Config = c.UserID

	GroupUsersAdmin.Fields[2].Config = c.CreatedAt

	GroupUsersAdmin.Fields[3].Config = c.UpdatedAt

	GroupUsersAdmin.Fields[4].Config = c.DeletedAt

}
