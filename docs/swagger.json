{
    "swagger": "2.0",
    "info": {
        "title": "Go Vue Template",
        "contact": {},
        "license": {
            "name": "Unknown"
        },
        "version": "0.1"
    },
    "paths": {
        "/api/users/me": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets information on the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            }
        },
        "/auth/loginjwt": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Exchanges a JWT from a configurable source for a signed JWT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/loginup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Exchanges a username and password for a signed JWT",
                "parameters": [
                    {
                        "description": "Login parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new account using username and password as the authentication scheme",
                "parameters": [
                    {
                        "description": "Register parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/crud/accessLogs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list for all entities of the AccessLog type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort by id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by path. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by request_body. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.request_body",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by request_headers. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.request_headers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by response_body. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.response_body",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by response_headers. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.response_headers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by response_code. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.response_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by processing_duration. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.processing_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by request_method. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.request_method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by user_id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by ip_address. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.ip_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by created_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIAccessLog"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new AccessLog",
                "parameters": [
                    {
                        "description": "Creation parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APICreateAccessLogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIAccessLog"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a range of accessLogs by their ids",
                "parameters": [
                    {
                        "description": "List of ids to delete",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.IDList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hard delete accessLog",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.DeletedCount"
                        }
                    }
                }
            }
        },
        "/crud/accessLogs/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a single AccessLog entity by their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccessLog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIGetAccessLogsResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a single AccessLog entity based on their id",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUpdateAccessLogRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "AccessLog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIAccessLog"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a single AccessLog entity based on their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccessLog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIAccessLog"
                        }
                    }
                }
            }
        },
        "/crud/images": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list for all entities of the Image type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include deleted images in the results",
                        "name": "withDeleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by name. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by type. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by size. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by width. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.width",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by height. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by created_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by updated_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.updated_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by deleted_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.deleted_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIImage"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new Image",
                "parameters": [
                    {
                        "description": "Creation parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APICreateImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIImage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a range of images by their ids",
                "parameters": [
                    {
                        "description": "List of ids to delete",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.IDList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hard delete image",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.DeletedCount"
                        }
                    }
                }
            }
        },
        "/crud/images/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a single Image entity by their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIGetImagesResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a single Image entity based on their id",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUpdateImageRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Image id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIImage"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a single Image entity based on their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hard delete image",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIImage"
                        }
                    }
                }
            }
        },
        "/crud/images/:id/unDelete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Undeletes a image by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIImage"
                        }
                    }
                }
            }
        },
        "/crud/jobs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list for all entities of the Job type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort by id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by type. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by priority. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by source. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by data. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.data",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by run_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.run_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by failure_data. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.failure_data",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by max_retries. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.max_retries",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by retry_count. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.retry_count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by status. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by finished_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.finished_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by created_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIJob"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new Job",
                "parameters": [
                    {
                        "description": "Creation parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APICreateJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIJob"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a range of jobs by their ids",
                "parameters": [
                    {
                        "description": "List of ids to delete",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.IDList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hard delete job",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.DeletedCount"
                        }
                    }
                }
            }
        },
        "/crud/jobs/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a single Job entity by their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIGetJobsResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a single Job entity based on their id",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUpdateJobRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Job id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIJob"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a single Job entity based on their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIJob"
                        }
                    }
                }
            }
        },
        "/crud/tokenIssuances": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list for all entities of the TokenIssuance type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort by id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by user_id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by ip_address. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.ip_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by created_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APITokenIssuance"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new TokenIssuance",
                "parameters": [
                    {
                        "description": "Creation parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APICreateTokenIssuanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APITokenIssuance"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a range of tokenIssuances by their ids",
                "parameters": [
                    {
                        "description": "List of ids to delete",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.IDList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hard delete tokenIssuance",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.DeletedCount"
                        }
                    }
                }
            }
        },
        "/crud/tokenIssuances/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a single TokenIssuance entity by their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TokenIssuance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIGetTokenIssuancesResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a single TokenIssuance entity based on their id",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUpdateTokenIssuanceRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "TokenIssuance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APITokenIssuance"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a single TokenIssuance entity based on their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TokenIssuance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APITokenIssuance"
                        }
                    }
                }
            }
        },
        "/crud/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list for all entities of the User type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include deleted users in the results",
                        "name": "withDeleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by id. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by name. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by login. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.login",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by email. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by sub. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.sub",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by roles. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.roles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by image. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.image",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by birthday. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by gender_self_defined. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.gender_self_defined",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by gender. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by location. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by phone. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by created_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by updated_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.updated_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by deleted_at. Value should be ASC or DESC. eg: ?sort.created_at=DESC",
                        "name": "sort.deleted_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new User",
                "parameters": [
                    {
                        "description": "Creation parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APICreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a range of users by their ids",
                "parameters": [
                    {
                        "description": "List of ids to delete",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.IDList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hard delete user",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.DeletedCount"
                        }
                    }
                }
            }
        },
        "/crud/users/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a single User entity by their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIGetUsersResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a single User entity based on their id",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUpdateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Soft deletes a single User entity based on their id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hard delete user",
                        "name": "hardDelete",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            }
        },
        "/crud/users/:id/unDelete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Undeletes a user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modelcrud.APIUser"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "returns 200 when service is running",
                "produces": [
                    "application/json"
                ],
                "summary": "Health check handler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "main.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIAccessLog": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "description": "uuid",
                    "type": "string"
                },
                "ip_address": {
                    "description": "character varying",
                    "type": "string"
                },
                "path": {
                    "description": "character varying",
                    "type": "string"
                },
                "processing_duration": {
                    "description": "integer",
                    "type": "integer"
                },
                "request_body": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "request_method": {
                    "description": "character varying",
                    "type": "string"
                },
                "response_body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "response_code": {
                    "description": "integer",
                    "type": "integer"
                },
                "response_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APICreateAccessLogRequest": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "processing_duration": {
                    "type": "integer"
                },
                "request_body": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "request_method": {
                    "type": "string"
                },
                "response_body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "response_code": {
                    "type": "integer"
                },
                "response_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APICreateImageRequest": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APICreateJobRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "failure_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "finished_at": {
                    "type": "string"
                },
                "max_retries": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "retry_count": {
                    "type": "integer"
                },
                "run_at": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APICreateTokenIssuanceRequest": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APICreateUserRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gender_self_defined": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIGetAccessLogsResponse": {
            "type": "object",
            "properties": {
                "access_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modelcrud.APIAccessLog"
                    }
                },
                "next_offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIGetImagesResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modelcrud.APIImage"
                    }
                },
                "next_offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIGetJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modelcrud.APIJob"
                    }
                },
                "next_offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIGetTokenIssuancesResponse": {
            "type": "object",
            "properties": {
                "next_offset": {
                    "type": "integer"
                },
                "token_issuances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modelcrud.APITokenIssuance"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIGetUsersResponse": {
            "type": "object",
            "properties": {
                "next_offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modelcrud.APIUser"
                    }
                }
            }
        },
        "modelcrud.APIImage": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "timestamp without time zone",
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "height": {
                    "description": "integer",
                    "type": "integer"
                },
                "id": {
                    "description": "uuid",
                    "type": "string"
                },
                "name": {
                    "description": "character varying",
                    "type": "string"
                },
                "size": {
                    "description": "integer",
                    "type": "integer"
                },
                "type": {
                    "description": "character varying",
                    "type": "string"
                },
                "updated_at": {
                    "description": "timestamp without time zone",
                    "type": "string"
                },
                "width": {
                    "description": "integer",
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIJob": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "failure_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "finished_at": {
                    "type": "string"
                },
                "id": {
                    "description": "uuid",
                    "type": "string"
                },
                "max_retries": {
                    "description": "integer",
                    "type": "integer"
                },
                "priority": {
                    "description": "integer",
                    "type": "integer"
                },
                "retry_count": {
                    "type": "integer"
                },
                "run_at": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "description": "character varying",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APITokenIssuance": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "description": "uuid",
                    "type": "string"
                },
                "ip_address": {
                    "description": "character varying",
                    "type": "string"
                },
                "user_id": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "modelcrud.APIUpdateAccessLogRequest": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "processing_duration": {
                    "type": "integer"
                },
                "request_body": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "request_method": {
                    "type": "string"
                },
                "response_body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "response_code": {
                    "type": "integer"
                },
                "response_headers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIUpdateImageRequest": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.APIUpdateJobRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "failure_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "finished_at": {
                    "type": "string"
                },
                "max_retries": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "retry_count": {
                    "type": "integer"
                },
                "run_at": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIUpdateTokenIssuanceRequest": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIUpdateUserRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gender_self_defined": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "modelcrud.APIUser": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "created_at": {
                    "description": "timestamp without time zone",
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "description": "character varying",
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gender_self_defined": {
                    "type": "boolean"
                },
                "id": {
                    "description": "uuid",
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "description": "character varying",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "timestamp without time zone",
                    "type": "string"
                }
            }
        },
        "modelcrud.DeletedCount": {
            "type": "object",
            "properties": {
                "deleted_count": {
                    "type": "integer"
                }
            }
        },
        "modelcrud.IDList": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}