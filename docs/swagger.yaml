definitions:
  main.AuthenticationResult:
    properties:
      jwt:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  main.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  main.RegisterRequest:
    properties:
      email:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - login
    - name
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      login:
        $ref: '#/definitions/null.String'
      name:
        type: string
      sub:
        $ref: '#/definitions/null.String'
      updated_at:
        type: string
    type: object
  null.String:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact: {}
  license:
    name: Unknown
  title: Go Vue Template
  version: "0.1"
paths:
  /auth/loginjwt:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.AuthenticationResult'
      summary: Exchanges a JWT from a configurable source for a signed JWT
  /auth/loginup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.AuthenticationResult'
      summary: Exchanges a username and password for a signed JWT
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.AuthenticationResult'
      summary: Registers a new account using username and password as the authentication
        scheme
  /healthz:
    get:
      description: returns 200 when service is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check handler
  /users/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Gets information on the current user
swagger: "2.0"
